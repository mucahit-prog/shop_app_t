Notifiers

State'iniz bir pizzaysa Notifier sizin pizzanızı yapan, saklayan, 
değiştiren ve değişikliği size haber veren aşçıdır. Size bir şeylerin 
değişip değişmediğini söyleyen widget kendisi. İki türlüsü var. 
ChangeNotifier ve ValueNotifier. Hangisini kullanacağınız tamamen sizin 
ne için kullanacağınıza göre değişiyor. 

*ChangeNotifier'ı bir class'ı dinlemek için kullanabilirken 
*ValueNotifier'i bir bir değişkeni dinlemek için kullanabilirsiniz. 

Bu class'ı değişiklikleri dinleyen kişileri uyarmak için kullanıyoruz. 
Class içindeki değişiklikleri *notifyListeners() fonksiyonu ile dinleyen 
tüm class'ları değişikliklerden haberdar edebildiğimiz için widget'ler arası 
state paylaşımı için en sık kullanılan yapılardan biridir. 
Basit bir örnek için;

class ChangeNotifierExample extends ChangeNotifier {
  //Dinlemek istediğimiz değişkenler
  String name = "Osman";
  int age = 24;
  
  //age'i bir arttıran bir fonksiyon
  growUp(){
   //Burda age'i bir arttırdık ama age variable'ını kullanan diğer yerler bu değişiklikten habersiz.
   age += 1; 
    
    //Değişkenlerimizi dinleyen herkese bir değişiklik olduğunu haber veriyoruz.
    notifyListeners(); 
  }
  
  //Aynı şeyi name değişkeni için yapabiliriz
  changeName(String newName){
    name = newName;
    
    notifyListeners();
  }
}


class SomeWidget extends StatelessWidget {
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
         StreamProvider(
            create: (_) => MedicoProvider().medicoStream(),
          ),
          FutureProvider(
            create: (_) => FoodProvider().getFoodData(),
          ),
                  ChangeNotifierProvider(
            create: (_) => CourseProvider(),
          ),
        Provider<SomethingElse>(create: (_) => SomethingElse()),
       
      ],
      child: Builder(
        builder: (BuildContext context) {
          AsyncSnapshot<String> snapshot =
              Provider.of<AsyncSnapshot<String>>(context);
          String data = snapshot.data;
          return Text(data); 
        },
      ),
    );
  }
}



ValueNotifier kullanımı için basit bir örnek;

import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Center(
          child: MyHomePage(title: "Sayı Arttır"),
        ),
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);
  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  
  // Value Notifier'da bir int tanımladık.
  final ValueNotifier<int> _counter = ValueNotifier<int>(0);
  final Widget goodJob = const Text('Good job!');
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title)
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text('You have pushed the button this many times:'),
            ValueListenableBuilder(
              builder: (BuildContext context, int value, Widget child) {
                // Bu builder sadece _counter değiştiğinde güncellenecek
                return Row(
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: <Widget>[
                    Text('$value'),
                    Text(value > 5 ? "Big Value Wow!!" : "Not so big.."),
                    child,
                  ],
                );
              },
              valueListenable: _counter,
              // The child parameter is most helpful if the child is
              // expensive to build and does not depend on the value from
              // the notifier.
              child: goodJob,
            )
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.plus_one),
        onPressed: () => _counter.value += 1,
      ),
    );
  }
}
